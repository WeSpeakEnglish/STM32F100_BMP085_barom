/******************************************************************************

   Заголовочный файл модуля GPIO.
   Содержит прототипы функций, макросы и определения переменных для них.

 ******************************************************************************
   Общие сведения.
   - в качестве параметра в макросы и функции передаётся
   указатель на базовый адрес порта *PORTX (совпадает с адресом регистра GPIOX->CRL)

   - обращение к управляющим регистрам порта через смещение относительно базового адреса
   - для обозначения структуры аргументов передаваемых в макросы и функции 
    в конце имён указаны префиксы:
   _m - передаётся битовая маска, возможна работа с несколькими битами;
   _b - передаётся номер бита, работа с одним из битов порта;


 ******************************************************************************/

#include "stm32F10x.h" // Стандартный хидер CMSIS для STM32.

//    Прототипы функций.
void  PinOutPP_b (u32 *adr, u8 bit); // Настройка вывода на двухтактный PushPull - выход.
void  PinOutOD_b (u32 *adr, u8 bit); // Настройка вывода на выход c открытым стоком OpenDrain.
void  PinInputZ_b (u32 *adr, u8 bit); // Настройка вывода на вход в третьем Z-состоянии.
void  PinOutAF_b (u32 *adr, u8 bit); // Настройка вывода на выход с алmтернативной функцией.

//    Указатели на базовые адреса GPIO.
extern u32   *PORTA;
extern u32   *PORTB;
extern u32   *PORTC;
extern u32   *PORTD;
extern u32   *PORTE;
extern u32   *PORTF;
extern u32   *PORTG;

//    Макросы.
#define _spin_m(port,mask) (*(port+4)=(mask))        // Установка одного или нескольких битов порта по маске.
#define _cpin_m(port,mask) (*(port+4)=(mask)<<16)    // Сброс одного или нескольких битов порта по маске.
#define _ipin_m(port,mask) (*(port+3)^=(mask))        // Инвертирование одного или нескольких битов порта по маске.
#define _wr_port(port,word) (*(port+3)=(word))     // Запись выходного регистра порта.
#define _rd_port(port) (*(port+2))                 // Чтение входного регистра порта.
#define _checkpin_b(port,bit) (*(port+2)&(1<<bit))   // Проверка бита входного регистра порта.

/******************************************************************************
   Примеры:

   #define KEY    0 // Кнопка на PA0.
   #define LED3_MASK  (1<<9) // Маска для вывода светодиода LED3 на PC9.   
   #define LED4_MASK  (1<<8) // Маска для LED4 на PC8.  

   _cpin_m(PORTC, LED3_MASK); // Погасить LED3.
   _spin_m(PORTC, LED3_MASK | LED4_MASK); // Зажечь LED3 и LED4.
   _ipin_m(PORTC, LED3_MASK|LED4_MASK); // Изменить состояние светодиодов LED3 и LED4.
   if (_checkpin_b(PORTA, KEY)) _wr_port(PORTC, 0xFFFF) // Если кнопка на PA0 нажата, установить весь порт С.

 ******************************************************************************/
